paths:
  /api/books/import/csv:
    post:
      tags:
        - Book
      summary: CSV 파일로 도서 등록
      description: 크롤링한 교보문고 CSV를 업로드하여 도서를 DB에 등록/갱신합니다.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV 파일. 헤더 예시: isbn,title,authors,publisher,price,sale_price,contents,thumbnail,publishedAt,status,categories (authors/categories는 '|' 구분)
      responses:
        '200':
          description: 도서 등록/갱신 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      upserted:
                        type: integer
                        example: 120
                      modified:
                        type: integer
                        example: 45

  /api/books:
    get:
      tags:
        - Book
      summary: 서버에 등록된 책 목록 조회
      description: 서버 DB에 저장된 책을 제목으로 검색하고 페이지네이션으로 조회합니다.
      parameters:
        - name: title
          in: query
          required: true
          schema:
            type: string
          description: 검색할 책 제목 (부분 일치, 대소문자 구분 없음)
          example: "데미안"
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: 페이지 번호
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: 페이지당 항목 수
      responses:
        '200':
          description: 책 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                        description: 전체 항목 수
                        example: 25
                      page:
                        type: integer
                        description: 현재 페이지
                        example: 1
                      limit:
                        type: integer
                        description: 페이지당 항목 수
                        example: 10
                      totalPages:
                        type: integer
                        description: 전체 페이지 수
                        example: 3
        '404':
          description: title이 필요합니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/books/{bookId}:
    get:
      tags:
        - Book
      summary: 서버에 등록된 책 조회
      description: 서버 DB에 저장된 특정 책의 정보를 조회합니다.
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: string
            format: objectId
          description: 책 ID
          example: "507f1f77bcf86cd799439011"
      responses:
        '200':
          description: 책 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Book'
        '404':
          description: bookId가 필요합니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/books/isbn/{isbn}:
    get:
      tags:
        - Book
      summary: ISBN으로 책 조회
      description: ISBN 번호로 특정 책을 조회합니다.
      parameters:
        - name: isbn
          in: path
          required: true
          schema:
            type: string
          description: 책 ISBN 번호
          example: "9788936433598"
      responses:
        '200':
          description: 책 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Book'
        '404':
          description: 해당 도서가 존재하지 않습니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Book:
      type: object
      properties:
        _id:
          type: string
          format: objectId
          example: "507f1f77bcf86cd799439011"
        title:
          type: string
          example: "데미안"
        authors:
          type: array
          items:
            type: string
          example: ["헤르만 헤세"]
        publisher:
          type: string
          example: "창비"
        price:
          type: integer
          example: 15000
        sale_price:
          type: integer
          example: 13500
        contents:
          type: string
          example: "책 내용 요약"
        thumbnail:
          type: string
          example: "https://example.com/book-cover.jpg"
        isbn:
          type: string
          example: "9788936433598"
        publishedAt:
          type: string
          example: "2020-01-01T00:00:00.000Z"
        status:
          type: string
          example: "정상판매"
        createdAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00.000Z"

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "오류 메시지"
        error:
          type: string
          example: "상세 오류 내용"